var N=null,E="",T="t",U="u",searchIndex={};
var R=["Custom","string","fruiterror","result","fruitapp","fruitstopper","try_from","try_into","borrow_mut","borrow","type_id","typeid","fruitcallbackkey","runperiod","trampoline","formatter","FruitCallbackKey","RunPeriod","ActivationPolicy","FruitError","InstallDir","Trampoline","FruitApp","FruitStopper"];

searchIndex["fruitbasket"]={"doc":"fruitbasket - Framework for running Rust programs in a Mac…","i":[[3,R[22],"fruitbasket","Main interface for controlling and interacting with the…",N,N],[3,R[21],E,"API to move the executable into a Mac app bundle and…",N,N],[3,R[23],E,"An opaque, thread-safe object that can interrupt the run…",N,N],[4,R[16],E,"Key into the ObjC callback hash map",N,N],[13,"Method",E,"A callback tied to a generic selector",0,N],[13,"Object",E,"A callback from a specific object instance",0,N],[4,R[17],E,"Options for how long to run the event loop on each call",N,N],[13,"Once",E,"Run event loop once and return",1,N],[13,"Forever",E,"Run event loop forever, never returning and blocking the…",1,N],[13,"Time",E,"Run event loop at least the specified length of time",1,N],[4,R[18],E,"Policies controlling how a Mac application's UI is…",N,N],[13,"Regular",E,"Appears in the Dock and menu bar and can have an…",2,N],[13,"Accessory",E,"Does not appear in Dock or menu bar, but may create windows",2,N],[13,"Prohibited",E,"Does not appear in Dock or menu bar, may not create…",2,N],[4,R[19],E,"Class for errors generated by fruitbasket. Dereferences to…",N,N],[13,"UnsupportedPlatform",E,"fruitbasket doesn't run on this platform (safe to ignore)",3,N],[13,"IOError",E,"Disk I/O errors: failed to write app bundle to disk",3,N],[13,"GeneralError",E,"Any other unclassified error",3,N],[4,R[20],E,"Options for where to save generated app bundle",N,N],[13,"Temp",E,"Store in a system-defined temporary directory",4,N],[13,"SystemApplications",E,"Store in the system-wide Application directory (all users)",4,N],[13,"UserApplications",E,"Store in the user-specific Application directory (current…",4,N],[13,R[0],E,"Store in a custom directory, specified as a String",4,N],[4,"LogDir",E,"Options for where to save logging output generated by…",N,N],[13,"Home",E,"User's home directory",5,N],[13,"Temp",E,"Temporary directory (as specified by OS)",5,N],[13,R[0],E,"Custom location, provided as a String",5,N],[5,"parse_url_event",E,"Parse an Apple URL event into a URL string",N,[[],[R[1]]]],[5,"create_logger",E,"Enable logging to rolling log files with Rust `log` library",N,[[["u32"],["str"],["logdir"]],[[R[1]],[R[3],[R[1],R[2]]],[R[2]]]]],[11,"new",E,"Creates a new Trampoline builder to build a Mac app bundle",6,[[["str"]],[R[14]]]],[11,"name",E,"Set name of application.  Same as provided to `new()`.",6,[[["self"],["str"]],["self"]]],[11,"exe",E,"Set name of executable.  Same as provided to `new()`.",6,[[["self"],["str"]],["self"]]],[11,"ident",E,"Set app bundle ID.  Same as provided to `new()`.",6,[[["self"],["str"]],["self"]]],[11,"icon",E,"Set bundle icon file.",6,[[["self"],["str"]],["self"]]],[11,"version",E,"Set the bundle version.",6,[[["self"],["str"]],["self"]]],[11,"plist_key",E,"Set an arbitrary key/value pair in the Info.plist",6,[[["self"],["str"]],["self"]]],[11,"plist_keys",E,"Set multiple arbitrary key/value pairs in the Info.plist",6,[[["self"],["vec"]],["self"]]],[11,"plist_raw_string",E,"Add a 'raw', preformatted string to Info.plist",6,[[["self"],[R[1]]],["self"]]],[11,"resource",E,"Add file to Resources directory of app bundle",6,[[["self"],["str"]],["self"]]],[11,"resources",E,"Add multiple files to Resources directory of app bundle",6,[[["self"],["vec"]],["self"]]],[11,"build",E,"Finishes building and launching the app bundle",6,[[["self"],["installdir"]],[[R[2]],[R[3],[R[4],R[2]]],[R[4]]]]],[11,"is_bundled",E,"Returns whether the current process is running from a Mac…",6,[[],["bool"]]],[11,"new",E,"Initialize the Apple app environment",7,[[],[R[4]]]],[11,"register_callback",E,"Register to receive a callback when the ObjC runtime…",7,[[["self"],["fruitobjccallback"],[R[12]]]]],[11,"register_apple_event",E,"Register application to receive Apple events of the given…",7,[[["self"],["u32"]]]],[11,"set_activation_policy",E,"Set the app \"activation policy\" controlling what UI it…",7,[[["activationpolicy"],["self"]]]],[11,"terminate",E,"Cleanly terminate the application",7,[[["i32"]]]],[11,"stop",E,"Stop the running app run loop",7,[[[R[5]]]]],[11,"run",E,"Runs the main application event loop",7,[[["self"],[R[13]]],[R[3]]]],[11,"stopper",E,"Create a thread-safe object that can interrupt the run loop",7,[[["self"]],[R[5]]]],[11,"bundled_resource_path",E,"Locate a resource in the executing Mac App bundle",7,[[["str"]],[[R[1]],["option",[R[1]]]]]],[6,"FruitObjcCallback",E,"A boxed Fn type for receiving Rust callbacks from ObjC…",N,N],[17,"DEFAULT_PLIST",E,"Info.plist entries that have default values, but can be…",N,N],[17,"FORBIDDEN_PLIST",E,"Info.plist entries that are set, and cannot be overridden",N,N],[17,"kInternetEventClass",E,"Apple kInternetEventClass constant",N,N],[17,"kAEGetURL",E,"Apple kAEGetURL constant",N,N],[17,"keyDirectObject",E,"Apple keyDirectObject constant",N,N],[11,"stop",E,"Stop the run loop on the `FruitApp` instance that created…",8,[[["self"]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[6],E,E,7,[[[U]],[R[3]]]],[11,R[7],E,E,7,[[],[R[3]]]],[11,R[8],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[R[11]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[6],E,E,6,[[[U]],[R[3]]]],[11,R[7],E,E,6,[[],[R[3]]]],[11,R[8],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[R[11]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"to_owned",E,E,8,[[["self"]],[T]]],[11,"clone_into",E,E,8,[[[T],["self"]]]],[11,"into",E,E,8,[[],[U]]],[11,R[6],E,E,8,[[[U]],[R[3]]]],[11,R[7],E,E,8,[[],[R[3]]]],[11,R[8],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[R[11]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[6],E,E,0,[[[U]],[R[3]]]],[11,R[7],E,E,0,[[],[R[3]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[R[11]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[6],E,E,1,[[[U]],[R[3]]]],[11,R[7],E,E,1,[[],[R[3]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[R[11]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[6],E,E,2,[[[U]],[R[3]]]],[11,R[7],E,E,2,[[],[R[3]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[R[11]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,"to_string",E,E,3,[[["self"]],[R[1]]]],[11,R[6],E,E,3,[[[U]],[R[3]]]],[11,R[7],E,E,3,[[],[R[3]]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[R[11]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[6],E,E,4,[[[U]],[R[3]]]],[11,R[7],E,E,4,[[],[R[3]]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[R[11]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[6],E,E,5,[[[U]],[R[3]]]],[11,R[7],E,E,5,[[],[R[3]]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[R[11]]]],[11,"from",E,E,3,[[["error"]],["self"]]],[11,"eq",E,E,0,[[[R[12]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[12]],["self"]],["bool"]]],[11,"eq",E,E,1,[[[R[13]],["self"]],["bool"]]],[11,"ne",E,E,1,[[[R[13]],["self"]],["bool"]]],[11,"default",E,E,6,[[],[R[14]]]],[11,"clone",E,E,8,[[["self"]],[R[5]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"fmt",E,E,3,[[["self"],[R[15]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[15]]],[R[3]]]],[11,"description",E,E,3,[[["self"]],["str"]]],[11,"cause",E,E,3,[[["self"]],[["option",["error"]],["error"]]]]],"p":[[4,R[16]],[4,R[17]],[4,R[18]],[4,R[19]],[4,R[20]],[4,"LogDir"],[3,R[21]],[3,R[22]],[3,R[23]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);